package know.io;

import know.IO;
import java.io.File;
import know.Virtual;

public enum JS implements Virtual {

    LINEAR(new IO("C:/selenium/golden/target/linear/js", "script", "js", "(function(){var aware = function(global, script, key) {\nvar time = Date.now();\nreturn require.src('http://localhost/io/'+global+'/write/' + ((time - 2) * qed) + '-' + ((time - 1) * qed) + '-' + ((time + 1) * qed) + '-' + ((time + 2) * qed) + '.js?name=' + key + '&path=' + encodeURIComponent('NIO.root+/www/js') + '&content=' + encodeURIComponent(script));\n    }, linear = function(script, global) {\nreturn aware(global, script);\n    }, future = function(script, global) {\nreturn linear(script, global);\n    }, require = document.createEvent('Event'), qed = 299792458;\n    require.initEvent('script', true, true);\n    document.dispatchEvent(require);\n    require.src('js/event.js');\n    document.addEventListener('future',function(event){\nevent.script = function(source, named){\n    return future(source, named);\n};\n    },true);\n})();")),
    USER_STORY(new IO("C:/selenium/golden/target/user-story/js", "script", "js", "(function() {\n"
            + "    var notify = function(user, story, callback, action, host, xpath, value) {\n"
            + "        remote.user = user,\n"
            + "                remote.story = story,\n"
            + "                remote.callback = callback,\n"
            + "                remote.action = action,\n"
            + "                remote.host = host,\n"
            + "                remote.xpath = xpath,\n"
            + "                remote.value = value;\n"
            + "        document.dispatchEvent(remote);\n"
            + "        return remote.src;\n"
            + "    }, process = function(image, path) {\n"
            + "        future.id = image.id;\n"
            + "        future.img = image.image;\n"
            + "        future.path = path;\n"
            + "        document.dispatchEvent(future);\n"
            + "    }, load = function() {\n"
            + "        page = start.value;\n"
            + "        var check = page.lastIndexOf('/');\n"
            + "        if (page.length === check + 1) {\n"
            + "            page = page.substring(0, check);\n"
            + "            start.value = page;\n"
            + "            load();\n"
            + "        }\n"
            + "        if (page.indexOf('http://') === 0 && check === 6) {\n"
            + "            start.removeEventListener('change', start, true), document.body.removeChild(start);\n"
            + "            var source = notify(null, '', 'userReady', 'open', page, '/', '');\n"
            + "            delete start, start = null, delete start, start = null;\n"
            + "            userReady = function(user) {\n"
            + "                console.info(user);\n"
            + "                id = user.id;\n"
            + "/*                process(image, source);\n*/"
            + "                document.body.removeChild(loading);\n"
            + "                document.body.appendChild(select);\n"
            + "                document.body.appendChild(select);\n"
            + "            };\n"
            + "            var temp = document.createElement(\"div\");\n"
            + "            temp.style.width = '100%';\n"
            + "            temp.style.height = '100%';\n"
            + "            temp.appendChild(loading);\n"
            + "            document.body.appendChild(loading);\n"
            + "            return;\n"
            + "        }\n"
            + "        start.focus();\n"
            + "    }, wait = function() {\n"
            + "        start.focus();\n"
            + "        document.body.appendChild(start);\n"
            + "    }, stop = function() {\n"
            + "        userStop = function(json) {\n"
            + "            userStop = null, delete userStop, process(json, source);\n"
            + "            document.body.removeChild(loading);\n"
            + "            id = -1;\n"
            + "/*            process(json.img, start.value);\n*/"
            + "        };\n"
            + "        var source = notify(id, 'local', 'userStop', 'close', page, '', '');\n"
            + "        document.body.appendChild(loading);\n"
            + "    }, first = function() {\n"
            + "        start.removeEventListener('mousedown', first, true);\n"
            + "        first = null, delete first;\n"
            + "        start.value = 'http://';\n"
            + "        start.focus();\n"
            + "        start.addEventListener('change', load, true);\n"
            + "    }, value = function(value, html) {\n"
            + "        var opt = document.createElement(\"option\");\n"
            + "        opt.value = value;\n"
            + "        opt.innerHTML = html;\n"
            + "        menu.appendChild(opt);\n"
            + "        return opt;\n"
            + "    }, option = function() {\n"
            + "        var xpath = document.createElement(\"input\");\n"
            + "        document.body.appendChild(xpath);\n"
            + "        var changed = function() {\n"
            + "            xpath.removeEventListener('change', changed, true);\n"
            + "            var cache = xpath.value;\n"
            + "            changed = function() {\n"
            + "                xpath.removeEventListener('change', changed, true);\n"
            + "                document.body.removeChild(xpath);\n"
            + "                userSelect = function(json) {\n"
            + "                    userSelect = null, delete userSelect, process(json, source);\n"
            + "                    document.body.removeChild(loading);\n"
            + "                    document.body.appendChild(select);\n"
            + "                };\n"
            + "                var source = notify('nate', 'local', 'userSelect', 'select', page, cache, xpath.value);\n"
            + "                document.body.appendChild(loading);\n"
            + "            };\n"
            + "            xpath.addEventListener('change', changed, true);\n"
            + "            xpath.value = '';\n"
            + "            xpath.focus();\n"
            + "        };\n"
            + "        xpath.addEventListener('change', changed, true);\n"
            + "        xpath.focus();\n"
            + "    }, click = function() {\n"
            + "        var xpath = document.createElement(\"input\");\n"
            + "        document.body.appendChild(xpath);\n"
            + "        var changed = function() {\n"
            + "            document.body.removeChild(xpath);\n"
            + "            mouseDown = function(json) {\n"
            + "                mouseDown = null, delete mouseDown, process(json, source);\n"
            + "                document.body.removeChild(loading);\n"
            + "                document.body.appendChild(select);\n"
            + "            };\n"
            + "            var source = notify('nate', 'local', 'mouseDown', 'mouseDown', page, xpath.value, '');\n"
            + "            document.body.appendChild(loading);\n"
            + "        };\n"
            + "        xpath.addEventListener('change', changed, true);\n"
            + "        xpath.focus();\n"
            + "    }, type = function() {\n"
            + "        var xpath = document.createElement(\"input\");\n"
            + "        document.body.appendChild(xpath);\n"
            + "        var changed = function() {\n"
            + "            xpath.removeEventListener('change', changed, true);\n"
            + "            changed = function() {\n"
            + "                document.body.removeChild(xpath);\n"
            + "                userType = function(json) {\n"
            + "                    userType = null, delete userType, process(json, source);\n"
            + "                    document.body.removeChild(loading);\n"
            + "                    document.body.appendChild(select);\n"
            + "                };\n"
            + "                var source = notify('nate', 'local', 'userType', 'type', page, cache, xpath.value);\n"
            + "                document.body.appendChild(loading);\n"
            + "            };\n"
            + "            var cache = xpath.value;\n"
            + "            xpath.value = '';\n"
            + "            xpath.focus();\n"
            + "            xpath.addEventListener('change', changed, true);\n"
            + "        };\n"
            + "        xpath.addEventListener('change', changed, true);\n"
            + "        xpath.focus();\n"
            + "    }, action = function(event) {\n"
            + "        document.body.removeChild(select);\n"
            + "        switch (event.target.value) {\n"
            + "            case '-1':\n"
            + "                document.body.appendChild(select);\n"
            + "                return;\n"
            + "            case 'option':\n"
            + "                return option();\n"
            + "            case 'click':\n"
            + "                return click();\n"
            + "            case 'type':\n"
            + "                return type();\n"
            + "            case 'stop':\n"
            + "                return stop();\n"
            + "        }\n"
            + "    }, populate = function() {\n"
            + "        value('-1', '--- Actions ---');\n"
            + "        value('option', 'Option');\n"
            + "        value('click', 'Click');\n"
            + "        value('type', 'Type');\n"
            + "        value('stop', 'Stop');\n"
            + "    }, id, page, select = document.createElement('div'), menu = document.createElement('select'), start = document.createElement('input'), remote = document.createEvent('Event'), future = document.createEvent('Event'), loading = document.createElement(\"h2\");\n"
            + "    loading.appendChild(document.createTextNode('Loading...'));\n"
            + "    future.initEvent('user-action', true, true), remote.initEvent('user-action-remote', true, true), start.value = 'http://some.domain.com', start.addEventListener('mousedown', first, true), menu.addEventListener('change', action, true), window.addEventListener('load', wait, true);\n"
            + "    select.appendChild(menu);\n"
            + "    populate();\n"
            + "})();"
            + "(function() {\n"
            + "    var remote = function(user, story, callback, action, host, xpath, value) {\n"
            + "        var script = document.createElement('script');\n"
            + "        if (user !== null) {\n"
            + "            user += '/';\n"
            + "        } else {\n"
            + "            user = '';\n"
            + "        }\n"
            + "        script.src = 'http://localhost/session/' + user + story + callback + '/' + action + '.js?domain=' + encodeURIComponent(host) + '&target=' + encodeURIComponent(xpath) + '&value=' + encodeURIComponent(value);\n"
            + "        script.type = 'text/javascript';\n"
            + "        script.async = true;\n"
            + "        document.head.appendChild(script);\n"
            + "        document.head.removeChild(script);\n"
            + "        document.body.appendChild(document.createElement(\"hr\"));\n"
            + "        document.body.appendChild(document.createTextNode(script.src));\n"
            + "        return script.src;\n"
            + "    }, process = function(event) {\n"
            + "        event.src = remote(event.user, event.story, event.callback, event.action, event.host, event.xpath, event.value);\n"
            + "    };\n"
            + "    document.addEventListener('user-action-remote', process, true);\n"
            + "})();")),
    WWW(new IO("C:/selenium/golden/target/www/js", "script", "js", "(function() {\n"
            + "    var load = function(src) {\n"
            + "        textarea.disabled = true;\n"
            + "        div.style.position = 'absolute';\n"
            + "        var script = document.createElement('script');\n"
            + "        script.type = 'text/javascript';\n"
            + "        script.src = src;\n"
            + "        script.async = !0;\n"
            + "        document.head.appendChild(script);\n"
            + "        document.head.removeChild(script);\n"
            + "    }, create = function(value, label) {\n"
            + "        var option = document.createElement(\"option\");\n"
            + "        option.value = value;\n"
            + "        option.innerHTML = label;\n"
            + "        return option;\n"
            + "    }, target, modify = function(event) {\n"
            + "        target = event.srcElement;\n"
            + "        switch (event.target.value) {\n"
            + "            case '-1':\n"
            + "                return;\n"
            + "            case '0':\n"
            + "                div.removeChild(read);\n"
            + "                div.removeChild(write);\n"
            + "                div.removeChild(start);\n"
            + "                path.value = '';\n"
            + "                var option, local = function() {\n"
            + "                    path.removeEventListener('change', local, true);\n"
            + "                    div.removeChild(path);\n"
            + "                    div.appendChild(read);\n"
            + "                    div.appendChild(write);\n"
            + "                    div.appendChild(start);\n"
            + "                    option = create(path.value, path.value);\n"
            + "                    target.appendChild(option);\n"
            + "                    target.value = option.value;\n"
            + "                };\n"
            + "                path.addEventListener('change', local, true);\n"
            + "                div.appendChild(path);\n"
            + "                path.focus();\n"
            + "                return;\n"
            + "        }\n"
            + "    }, reader = function() {\n"
            + "        reading = function(line) {\n"
            + "            reading = function(line) {\n"
            + "                textarea.disabled = false;\n"
            + "                textarea.value = textarea.value + line + \"\\r\";\n"
            + "            };\n"
            + "            textarea.disabled = false;\n"
            + "            textarea.value = line + \"\\r\";\n"
            + "        };\n"
            + "        load('http://localhost/io/reading/read/' + relative.value.substring(relative.value.lastIndexOf('/') + 1) + '?path=' + encodeURIComponent(absolute.value + '/' + relative.value.substring(0, relative.value.lastIndexOf('/'))));\n"
            + "    }, writer = function() {\n"
            + "        writing = function() {\n"
            + "            writing = null;\n"
            + "            textarea.disabled = false;\n"
            + "        };\n"
            + "        var src = 'http://localhost/io/writing/' + relative.value.substring(relative.value.lastIndexOf('/') + 1) + '?path=' + encodeURIComponent(absolute.value + '/' + relative.value.substring(0, relative.value.lastIndexOf('/'))),\n"
            + "                sending = textarea.value.replace(/\\r/g, \"/n\"),\n"
            + "                previous;\n"
            + "\n"
            + "        var encoded = encodeURIComponent(sending);\n"
            + "        if ((src.length + encoded.length) < 2049) {\n"
            + "            load(src + '&content=' + encoded);\n"
            + "            return;\n"
            + "        }\n"
            + "        var recursive = function() {\n"
            + "            previous = sending.substring(0, 1800);\n"
            + "            sending = sending.substring(1800);\n"
            + "            encoded = encodeURIComponent(previous);\n"
            + "            load(src + '&append=true&content=' + encoded);\n"
            + "            encoded = encodeURIComponent(sending);\n"
            + "            if (encoded.length < 2049) {\n"
            + "                load(src + '&content=' + encoded);\n"
            + "                return;\n"
            + "            }\n"
            + "            return recursive();\n"
            + "        };\n"
            + "        recursive();\n"
            + "    }, starter = function() {\n"
            + "        starting = function(service) {\n"
            + "            starting = null;\n"
            + "            textarea.disabled = false;\n"
            + "        };\n"
            + "        load('http://localhost/io/starting/start/' + relative.value.substring(relative.value.lastIndexOf('/') + 1) + '?path=' + encodeURIComponent(absolute.value + '/' + relative.value.substring(0, relative.value.lastIndexOf('/'))));\n"
            + "    }, restful = function(select, named) {\n"
            + "        select.style.width = width + 'px';\n"
            + "        select.addEventListener('change', modify, true);\n"
            + "        option = create(-1, '-- ' + named + ' Path --');\n"
            + "        select.appendChild(option);\n"
            + "        option = create(0, 'Add a new path.');\n"
            + "        select.appendChild(option);\n"
            + "    }, option, show = function() {\n"
            + "        document.body.appendChild(div);\n"
            + "        resize();\n"
            + "    }, resize = function() {\n"
            + "        var offWidth = div.offsetWidth;\n"
            + "        div.style.top = '50px';\n"
            + "        div.style.height = window.innerHeight - 50 + 'px';\n"
            + "        div.style.left = parseInt(window.innerWidth / 2, 10) - parseInt(offWidth / 2, 10) + 'px';\n"
            + "    }, button = function(act, named) {\n"
            + "        act.type = 'button';\n"
            + "        act.style.width = third + 'px';\n"
            + "        act.value = named;\n"
            + "    }, decorate = function() {\n"
            + "        restful(absolute, 'Absolute'), restful(relative, 'Relative'),\n"
            + "                button(read, ' Read '), button(write, ' Write '), button(start, ' Execute '),\n"
            + "                textarea.style.overflow = 'hidden', textarea.style.width = width + 'px', textarea.style.height = height + 'px',\n"
            + "                div.style.textAlign = 'center', div.style.position = 'absolute',\n"
            + "                read.addEventListener('mousedown', reader, true), write.addEventListener('mousedown', writer, true), start.addEventListener('mousedown', starter, true),\n"
            + "                window.addEventListener('load', show, true), window.addEventListener('resize', resize, true), build();\n"
            + "    }, build = function() {\n"
            + "        div.appendChild(context);\n"
            + "        div.appendChild(absolute);\n"
            + "        div.appendChild(document.createElement('hr'));\n"
            + "        div.appendChild(textarea);\n"
            + "        div.appendChild(document.createElement('hr'));\n"
            + "        div.appendChild(relative);\n"
            + "        div.appendChild(document.createElement('hr'));\n"
            + "        div.appendChild(read);\n"
            + "        div.appendChild(write);\n"
            + "        div.appendChild(start);\n"
            + "    }, third = 200, width = 600, height = 250, absolute = document.createElement(\"select\"), div = document.createElement('div'), textarea = document.createElement('textarea'), context = document.createElement('h2'), read = document.createElement('input'), write = document.createElement('input'), start = document.createElement('input'), path = document.createElement('input'), relative = document.createElement(\"select\");\n"
            + "    decorate();\n"
            + "})();"));

    private final Virtual virtual;

    JS(Virtual start) {
        virtual = start;
    }

    @Override
    public String toString() {
        return virtual.toString();
    }

    @Override
    public String getType() {
        return virtual.getType();
    }

    @Override
    public void setType(String type) {
        virtual.setType(type);
    }

    @Override
    public String getName() {
        return virtual.getName();
    }

    @Override
    public void setName(String name) {
        virtual.setName(name);
    }

    @Override
    public String getFolder() {
        return virtual.getFolder();
    }

    @Override
    public void setFolder(String folder) {
        virtual.setFolder(folder);
    }

    @Override
    public String getContent() {
        return virtual.getContent();
    }

    @Override
    public void setContent(String content) {
        virtual.setContent(content);
    }

    @Override
    public File call() throws Exception {
        return virtual.call();
    }
}
